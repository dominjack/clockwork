// This file is auto-generated. Do not edit manually.
// Run the program containing precalc_magics_to_file to regenerate it.

#[derive(Debug, Clone, Copy)]
#[repr(C)] // Optional: for layout guarantees
pub struct MagicEntry {
    pub mask: u64,
    pub magic: u64,
    pub shift: u8,
    pub offset: usize,
    pub size: usize,
}

impl MagicEntry {
    #[rustfmt::skip] // Optional: if lines get too long
    pub const fn new(mask: u64, magic: u64, shift: u8, offset: usize, size: usize) -> Self {
        Self { mask, magic, shift, offset, size }
    }
}

#[rustfmt::skip] // Optional: to prevent reformatting
pub static ROOK_MAGICS: [MagicEntry; 64] = [
    MagicEntry::new(0x000101010101017E, 0x00200010020C6100, 51,     0, 5608), // Index  0
    MagicEntry::new(0x000202020202027C, 0x0010000800040010, 51,  5608, 2048), // Index  1
    MagicEntry::new(0x000404040404047A, 0x0010480004000201, 51,  7656, 4128), // Index  2
    MagicEntry::new(0x0008080808080876, 0x0060040002002021, 51, 11784, 3024), // Index  3
    MagicEntry::new(0x001010101010106E, 0x0090008050900100, 51, 14808, 3201), // Index  4
    MagicEntry::new(0x002020202020205E, 0x0010009040818010, 51, 18009, 3144), // Index  5
    MagicEntry::new(0x004040404040403E, 0x0020004000200080, 51, 21153, 2048), // Index  6
    MagicEntry::new(0x008080808080807E, 0x8008001020408208, 51, 23201, 4142), // Index  7
    MagicEntry::new(0x0001010101017E00, 0x00002000100008A0, 51, 27343, 2320), // Index  8
    MagicEntry::new(0x0002020202027C00, 0x4000080200040008, 51, 29663, 1024), // Index  9
    MagicEntry::new(0x0004040404047A00, 0x0000080002010008, 51, 30687, 1536), // Index 10
    MagicEntry::new(0x0008080808087600, 0x0000040081404004, 51, 32223, 1602), // Index 11
    MagicEntry::new(0x0010101010106E00, 0x0000100100100080, 51, 33825, 1024), // Index 12
    MagicEntry::new(0x0020202020205E00, 0x0000101000400080, 51, 34849, 1024), // Index 13
    MagicEntry::new(0x0040404040403E00, 0x0000100020004010, 51, 35873, 1024), // Index 14
    MagicEntry::new(0x0080808080807E00, 0x6100200010200040, 51, 36897, 2304), // Index 15
    MagicEntry::new(0x00010101017E0100, 0x2C20001000080010, 51, 39201, 2048), // Index 16
    MagicEntry::new(0x00020202027C0200, 0x0082000408810014, 51, 41249, 1062), // Index 17
    MagicEntry::new(0x00040404047A0400, 0x0001000800020028, 51, 42311, 1552), // Index 18
    MagicEntry::new(0x0008080808760800, 0x4041000402008004, 51, 43863, 1986), // Index 19
    MagicEntry::new(0x00101010106E1000, 0x0200801000810050, 51, 45849, 1408), // Index 20
    MagicEntry::new(0x00202020205E2000, 0x0801000800402008, 51, 47257, 1536), // Index 21
    MagicEntry::new(0x00404040403E4000, 0x1288002000400080, 51, 48793, 1792), // Index 22
    MagicEntry::new(0x00808080807E8000, 0x0000005002006001, 51, 50585, 2856), // Index 23
    MagicEntry::new(0x000101017E010100, 0x1000100020000C20, 51, 53441, 2432), // Index 24
    MagicEntry::new(0x000202027C020200, 0x20018C0004020100, 51, 55873, 1378), // Index 25
    MagicEntry::new(0x000404047A040400, 0x6102008004040100, 51, 57251, 1536), // Index 26
    MagicEntry::new(0x0008080876080800, 0x9080820004004004, 51, 58787, 1794), // Index 27
    MagicEntry::new(0x001010106E101000, 0x8900008010010010, 51, 60581, 1024), // Index 28
    MagicEntry::new(0x002020205E202000, 0x0000008010004010, 51, 61605, 1024), // Index 29
    MagicEntry::new(0x004040403E404000, 0x0000040088100820, 51, 62629, 1541), // Index 30
    MagicEntry::new(0x008080807E808000, 0xA004200020001041, 51, 64170, 2320), // Index 31
    MagicEntry::new(0x0001017E01010100, 0x0022040800100010, 51, 66490, 2240), // Index 32
    MagicEntry::new(0x0002027C02020200, 0x4008010200040004, 51, 68730, 1024), // Index 33
    MagicEntry::new(0x0004047A04040400, 0x0300020100080008, 51, 69754, 1536), // Index 34
    MagicEntry::new(0x0008087608080800, 0x2101004080040004, 51, 71290, 1536), // Index 35
    MagicEntry::new(0x0010106E10101000, 0x0000100080100101, 51, 72826, 1026), // Index 36
    MagicEntry::new(0x0020205E20202000, 0x0120400080202001, 51, 73852, 1280), // Index 37
    MagicEntry::new(0x0040403E40404000, 0x8008004000840401, 51, 75132, 1582), // Index 38
    MagicEntry::new(0x0080807E80808000, 0x0000401000100020, 51, 76714, 2049), // Index 39
    MagicEntry::new(0x00017E0101010100, 0x2100120201002400, 51, 78763, 2394), // Index 40
    MagicEntry::new(0x00027C0202020200, 0x00000C0201000400, 51, 81157, 1282), // Index 41
    MagicEntry::new(0x00047A0404040400, 0x1000020401000800, 51, 82439, 2046), // Index 42
    MagicEntry::new(0x0008760808080800, 0x0080420081000400, 51, 84485, 2047), // Index 43
    MagicEntry::new(0x00106E1010101000, 0x8080008001001010, 51, 86532, 1024), // Index 44
    MagicEntry::new(0x00205E2020202000, 0x2040401000801020, 51, 87556, 1152), // Index 45
    MagicEntry::new(0x00403E4040404000, 0x0414002008008402, 51, 88708, 1365), // Index 46
    MagicEntry::new(0x00807E8080808000, 0x0008020010008804, 51, 90073, 2504), // Index 47
    MagicEntry::new(0x007E010101010100, 0x0020021000080010, 51, 92577, 2112), // Index 48
    MagicEntry::new(0x007C020202020200, 0x0000040200080008, 51, 94689, 1024), // Index 49
    MagicEntry::new(0x007A040404040400, 0x2002010080040014, 51, 95713, 1268), // Index 50
    MagicEntry::new(0x0076080808080800, 0x2400804024020004, 51, 96981, 1826), // Index 51
    MagicEntry::new(0x006E101010101000, 0x4000008010010010, 51, 98807, 1024), // Index 52
    MagicEntry::new(0x005E202020202000, 0x44401000C0008010, 51, 99831, 1538), // Index 53
    MagicEntry::new(0x003E404040404000, 0x10A0080060040050, 51, 101369, 1490), // Index 54
    MagicEntry::new(0x007E808080808000, 0x0000002042100010, 51, 102859, 2085), // Index 55
    MagicEntry::new(0x7E01010101010100, 0x0004082010810042, 51, 104944, 8128), // Index 56
    MagicEntry::new(0x7C02020202020200, 0x0401200481010941, 51, 113072, 7101), // Index 57
    MagicEntry::new(0x7A04040404040400, 0x0800400820100402, 51, 120173, 7872), // Index 58
    MagicEntry::new(0x7608080808080800, 0x00104020080C1002, 51, 128045, 7687), // Index 59
    MagicEntry::new(0x6E10101010101000, 0x0050102000840802, 51, 135732, 7422), // Index 60
    MagicEntry::new(0x5E20202020202000, 0x6000040040900802, 51, 143154, 6908), // Index 61
    MagicEntry::new(0x3E40404040404000, 0x0620008024450001, 51, 150062, 5912), // Index 62
    MagicEntry::new(0x7E80808080808000, 0x0402004010220481, 51, 155974, 8000), // Index 63
];

#[rustfmt::skip] // Optional: to prevent reformatting
pub static BISHOP_MAGICS: [MagicEntry; 64] = [
    MagicEntry::new(0x0040201008040200, 0x1200428080701001, 52,     0, 381), // Index  0
    MagicEntry::new(0x0000402010080400, 0x0000808010040046, 52,   381, 122), // Index  1
    MagicEntry::new(0x0000004020100A00, 0xAA00102008004001, 52,   503,  60), // Index  2
    MagicEntry::new(0x0000000040221400, 0x1000800800810500, 52,   563, 180), // Index  3
    MagicEntry::new(0x0000000002442800, 0x0020040060062080, 52,   743, 280), // Index  4
    MagicEntry::new(0x0000000204085000, 0x8800010080148020, 52,  1023, 168), // Index  5
    MagicEntry::new(0x0000020408102000, 0x0000008041001000, 52,  1191, 228), // Index  6
    MagicEntry::new(0x0002040810204000, 0x0390080100020020, 52,  1419, 424), // Index  7
    MagicEntry::new(0x0020100804020000, 0x0410020080200801, 52,  1843, 123), // Index  8
    MagicEntry::new(0x0040201008040000, 0x004A002080101001, 52,  1966, 125), // Index  9
    MagicEntry::new(0x00004020100A0000, 0x2A98001020080040, 52,  2091,  60), // Index 10
    MagicEntry::new(0x0000004022140000, 0x0300408008008500, 52,  2151, 180), // Index 11
    MagicEntry::new(0x0000000244280000, 0x9021000400600049, 52,  2331, 280), // Index 12
    MagicEntry::new(0x0000020408500000, 0x0084400100801440, 52,  2611, 168), // Index 13
    MagicEntry::new(0x0002040810200000, 0x0100101001010010, 52,  2779, 228), // Index 14
    MagicEntry::new(0x0004081020400000, 0x0020440040208008, 52,  3007, 228), // Index 15
    MagicEntry::new(0x0010080402000200, 0x0000080080801002, 52,  3235,  60), // Index 16
    MagicEntry::new(0x0020100804000400, 0x0400040020401002, 52,  3295,  62), // Index 17
    MagicEntry::new(0x004020100A000A00, 0x1800080010200818, 52,  3357, 160), // Index 18
    MagicEntry::new(0x0000402214001400, 0x4000100080140044, 52,  3517, 224), // Index 19
    MagicEntry::new(0x0000024428002800, 0x2000040040042101, 52,  3741, 320), // Index 20
    MagicEntry::new(0x0002040850005000, 0x4000020001008080, 52,  4061, 192), // Index 21
    MagicEntry::new(0x0004081020002000, 0x8100011000804011, 52,  4253, 168), // Index 22
    MagicEntry::new(0x0008102040004000, 0x0000008008008008, 52,  4421, 168), // Index 23
    MagicEntry::new(0x0008040200020400, 0x0100800900404008, 52,  4589,  62), // Index 24
    MagicEntry::new(0x0010080400040800, 0xE900400400401005, 52,  4651,  63), // Index 25
    MagicEntry::new(0x0020100A000A1000, 0x0020010000101002, 52,  4714, 192), // Index 26
    MagicEntry::new(0x0040221400142200, 0x2208008000082014, 52,  4906, 832), // Index 27
    MagicEntry::new(0x0002442800284400, 0x8800800200040400, 52,  5738, 961), // Index 28
    MagicEntry::new(0x0004085000500800, 0x8000400200010040, 52,  6699, 192), // Index 29
    MagicEntry::new(0x0008102000201000, 0x14A0080120202008, 52,  6891, 111), // Index 30
    MagicEntry::new(0x0010204000402000, 0x0208040080082005, 52,  7002, 112), // Index 31
    MagicEntry::new(0x0004020002040800, 0x9000410009004008, 52,  7114, 108), // Index 32
    MagicEntry::new(0x0008040004081000, 0x0000208008002002, 52,  7222, 108), // Index 33
    MagicEntry::new(0x00100A000A102000, 0x0408008020001020, 52,  7330, 192), // Index 34
    MagicEntry::new(0x0022140014224000, 0x1000004010010010, 52,  7522, 512), // Index 35
    MagicEntry::new(0x0044280028440200, 0x000A004010804009, 52,  8034, 832), // Index 36
    MagicEntry::new(0x0008500050080400, 0x2000404002000100, 52,  8866, 192), // Index 37
    MagicEntry::new(0x0010200020100800, 0x2140101001001005, 52,  9058,  64), // Index 38
    MagicEntry::new(0x0020400040201000, 0x6580100400400801, 52,  9122,  60), // Index 39
    MagicEntry::new(0x0002000204081000, 0x2200010080110020, 52,  9182, 168), // Index 40
    MagicEntry::new(0x0004000408102000, 0x0440008040110008, 52,  9350, 168), // Index 41
    MagicEntry::new(0x000A000A10204000, 0x0008080080200010, 52,  9518, 192), // Index 42
    MagicEntry::new(0x0014001422400000, 0x0080800040100028, 52,  9710, 208), // Index 43
    MagicEntry::new(0x0028002844020000, 0x82200100200B0008, 52,  9918, 216), // Index 44
    MagicEntry::new(0x0050005008040200, 0x0001012020010002, 52, 10134, 136), // Index 45
    MagicEntry::new(0x0020002010080400, 0x0040401020008002, 52, 10270,  62), // Index 46
    MagicEntry::new(0x0040004020100800, 0x0A40202004004001, 52, 10332,  62), // Index 47
    MagicEntry::new(0x0000020408102000, 0x1430100101001001, 52, 10394, 228), // Index 48
    MagicEntry::new(0x0000040810204000, 0x0240082001000802, 52, 10622, 228), // Index 49
    MagicEntry::new(0x00000A1020400000, 0x6000040800801080, 52, 10850, 172), // Index 50
    MagicEntry::new(0x0000142240000000, 0x0480000000400D02, 52, 11022, 154), // Index 51
    MagicEntry::new(0x0000284402000000, 0x0042000080200208, 52, 11176, 158), // Index 52
    MagicEntry::new(0x0000500804020000, 0xC020004080200100, 52, 11334,  62), // Index 53
    MagicEntry::new(0x0000201008040200, 0x82004040404000C0, 52, 11396, 122), // Index 54
    MagicEntry::new(0x0000402010080400, 0x0000202040100040, 52, 11518, 122), // Index 55
    MagicEntry::new(0x0002040810204000, 0x2640008001008024, 52, 11640, 424), // Index 56
    MagicEntry::new(0x0004081020400000, 0x0841800040208008, 52, 12064, 228), // Index 57
    MagicEntry::new(0x000A102040000000, 0x0000120008008010, 52, 12292, 172), // Index 58
    MagicEntry::new(0x0014224000000000, 0x034040201000400D, 52, 12464, 154), // Index 59
    MagicEntry::new(0x0028440200000000, 0x8002004000802002, 52, 12618, 158), // Index 60
    MagicEntry::new(0x0050080402000000, 0x0000000080801001, 52, 12776,  62), // Index 61
    MagicEntry::new(0x0020100804020000, 0x2208008100102001, 52, 12838, 123), // Index 62
    MagicEntry::new(0x0040201008040200, 0x0800810041000401, 52, 12961, 381), // Index 63
];
